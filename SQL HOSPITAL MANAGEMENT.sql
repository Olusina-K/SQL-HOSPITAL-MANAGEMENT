-- CREATED FOUR TABLES UNDER THE HOSPITAL MANAGEMENT SYSTEM AND ADDED A UNIQUE KEY TO THE PATIENTS AND DOCTORS TABLE 
-- WHILE INCLUDING A FOREIGN KEY TO THE APPOINTMEN AND PRESCRIPTION TABLE, LINKING THE TWO PARENT TABLES WITH THEM.
CREATE TABLE PATIENTSTAB(
    PATIENTS_NAME VARCHAR(50) NOT NULL,
    AGE INT NOT NULL,
    OCCUPATION VARCHAR(50) NOT NULL,
    PATIENTS_ID INT IDENTITY(101,1) NOT NULL PRIMARY KEY);

CREATE TABLE DOCTORSTB(
    DOCTORS_NAME VARCHAR(50) NOT NULL,
    DOCTORS_ID INT IDENTITY(200,5) NOT NULL PRIMARY KEY,
    DEPARTMENT VARCHAR(50) NOT NULL);

CREATE TABLE APPOINTMENT(
    PATIENTS_ID INT FOREIGN KEY REFERENCES PATIENTSTAB(PATIENTS_ID),
    PATIENTS_NAME VARCHAR(50),
    DOCTORS_ID INT FOREIGN KEY REFERENCES DOCTORSTB(DOCTORS_ID),
    DATE VARCHAR(20));

CREATE TABLE PRESCRIPTION(
MEDICATION VARCHAR(20) NOT NULL,
DOSAGE VARCHAR(20) NOT NULL,
DOCTORS_ID INT,
PATIENTS_ID INT,
FOREIGN KEY (DOCTORS_ID) REFERENCES DOCTORSTB(DOCTORS_ID),
FOREIGN KEY (PATIENTS_ID) REFERENCES PATIENTSTAB(PATIENTS_ID));



-- INSERTING DATA INTO THE FOUR TABLES
INSERT INTO PATIENTSTAB (PATIENTS_NAME, AGE, OCCUPATION) VALUES
('John Doe', 35, 'Teacher'),
('Mary Smith', 28, 'Nurse'),
('David Johnson', 42, 'Engineer'),
('Emily Davis', 30, 'Designer'),
('Michael Brown', 50, 'Lawyer');

INSERT INTO DOCTORSTB (DOCTORS_NAME, DEPARTMENT) VALUES
('Dr. Adams', 'Cardiology'),
('Dr. Baker', 'Neurology'),
('Dr. Carter', 'Orthopedics'),
('Dr. Daniels', 'Pediatrics'),
('Dr. Evans', 'Dermatology');

INSERT INTO APPOINTMENT (PATIENTS_ID, PATIENTS_NAME, DOCTORS_ID, DATE) VALUES
(101, 'John Doe', 200, '2024-05-01'),
(102, 'Mary Smith', 205, '2024-05-02'),
(103, 'David Johnson', 210, '2024-05-03'),
(104, 'Emily Davis', 215, '2024-05-04'),
(105, 'Michael Brown', 220, '2024-05-05');

INSERT INTO PRESCRIPTION (MEDICATION, DOSAGE, DOCTORS_ID, PATIENTS_ID) VALUES
('Aspirin', '100mg', 200, 101),
('Ibuprofen', '200mg', 205, 102),
('Amoxicillin', '500mg', 210, 103),
('Metformin', '500mg', 215, 104),
('Lisinopril', '10mg', 220, 105);


-- CREATING A TABLE 'THEOLOGIAN' WITH FOUR DATASET
CREATE TABLE THEOLOGIAN(
NAME VARCHAR(20) PRIMARY KEY,
BDATE DATE,
GENDER VARCHAR(20) NOT NULL DEFAULT 'MALE' CHECK (GENDER IN ('MALE', 'FEMALE')),
COUNTRY VARCHAR(20) FOREIGN KEY REFERENCES COUNTRIES(COUNTRY));

CREATE TABLE COUNTRIES(
COUNTRY VARCHAR(20) PRIMARY KEY,
COUNTRYCODE VARCHAR(10));

CREATE TABLE PERSONS(
NAME  VARCHAR(20) PRIMARY KEY,
BDATE DATE,
GENDER VARCHAR(20) NOT NULL DEFAULT 'MALE' CHECK (GENDER IN ('MALE', 'FEMALE')),
COUNTRY VARCHAR(20) FOREIGN KEY REFERENCES COUNTRIES(COUNTRY));

-- INSERTING INTO THE 3 TABLES RELEVANT VALUES 
INSERT INTO COUNTRIES (COUNTRY, COUNTRYCODE)
VALUES
('Nigeria', 'NG'),
('Canada', 'CA'),
('United States', 'US'),
('Germany', 'DE'),
('Brazil', 'BR');

INSERT INTO PERSONS (NAME, BDATE, GENDER, COUNTRY)
VALUES
('John Doe', '1985-03-15', 'MALE', 'Nigeria'),
('Jane Smith', '1990-07-22', 'FEMALE', 'Canada'),
('Mark Lee', '1978-12-05', DEFAULT, 'United States'), -- Default gender applies
('Anna Muller', '1982-04-18', 'FEMALE', 'Germany'),
('Carlos Silva', '1995-09-10', DEFAULT, 'Brazil');

INSERT INTO THEOLOGIAN (NAME, BDATE, GENDER, COUNTRY)
VALUES
('Paul Ade', '1960-01-12', 'MALE', 'Nigeria'),
('Mary Johnson', '1975-06-30', 'FEMALE', 'Canada'),
('Peter Wang', '1988-11-03', DEFAULT, 'United States'),
('Sophia Klein', '1972-05-25', 'FEMALE', 'Germany'),
('Lucas Rocha', '1990-08-14', DEFAULT, 'Brazil');

SELECT * FROM COUNTRIES
SELECT * FROM PERSONS
SELECT * FROM THEOLOGIAN

-- Load the data in THEOLOGIANS from PERSONS table.
INSERT INTO THEOLOGIAN (NAME, BDATE, GENDER, COUNTRY)
SELECT NAME, BDATE, GENDER, COUNTRY FROM PERSONS;
SELECT * FROM THEOLOGIAN;

-- Testing DATA VALIDATION
-- Test 1: Invalid country
INSERT INTO THEOLOGIAN (NAME, BDATE, GENDER, COUNTRY)
VALUES ('Invalid Country Test', '1980-10-10', 'MALE', 'Prussia');

-- Test 2: NULL gender 
INSERT INTO THEOLOGIAN (NAME, BDATE, GENDER, COUNTRY)
VALUES ('Null Gender Test', '1985-05-05', NULL, 'Nigeria');


-- USING JOIN FUNCTION ON THE TABLES
SELECT 
T.NAME, C.COUNTRY, C.COUNTRYCODE
FROM THEOLOGIAN T
JOIN COUNTRIES C
ON C.COUNTRY = T.COUNTRY;

-- COMBINE ALL THREE TABLES
SELECT 
    t.NAME AS Theologian_Name,
    t.BDATE AS Theologian_BirthDate,
    t.GENDER AS Theologian_Gender,
    p.NAME AS Person_Name,
    p.BDATE AS Person_BirthDate,
    p.GENDER AS Person_Gender,
    c.COUNTRY,
    c.COUNTRYCODE
FROM THEOLOGIAN t
JOIN COUNTRIES c
    ON t.COUNTRY = c.COUNTRY
JOIN PERSONS p
    ON p.COUNTRY = c.COUNTRY;

-- Using T-SQL, print all even numbers between 1 and 50 using a WHILE loop.
DECLARE @num INT = 2; 

WHILE @num <= 50
BEGIN
    PRINT @num;
    SET @num = @num + 2;
END;

-- CreatING a table named SCHOOLTABLE using while loop
CREATE TABLE SCHOOLTABLE (
StudentId INT PRIMARY KEY,
StdName VARCHAR(50),
Course VARCHAR(50),
Grade CHAR(2),
Address VARCHAR(100)
);

-- Inserting 10 rows into the SCHOOLTABLE using a WHILE loop.
DECLARE @counter INT = 1;

WHILE @counter <= 10
BEGIN
    INSERT INTO SCHOOLTABLE (StudentId, StdName, Course, Grade, Address)
    VALUES (
        @counter,
        CONCAT('Student', @counter),
        CONCAT('Course', @counter),
        CHAR(65 + (@counter % 5)), 
        CONCAT('Address ', @counter)
    );

    SET @counter = @counter + 1;
END;
select * from SCHOOLTABLE

-- Update any value in the SCHOOLTABLE using a WHILE loop.
DECLARE @id INT = 1;

WHILE @id <= 10
BEGIN
    UPDATE SCHOOLTABLE
    SET Grade = 'A+'
    WHERE StudentId = @id;

    SET @id = @id + 1;
END;
select * from SCHOOLTABLE